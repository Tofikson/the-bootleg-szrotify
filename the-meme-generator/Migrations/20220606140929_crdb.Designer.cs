// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using the_meme_generator;

#nullable disable

namespace the_meme_generator.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220606140929_crdb")]
    partial class crdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("the_meme_generator.albumy", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("album")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("data_wydania")
                        .HasColumnType("TEXT");

                    b.Property<int>("liczba_utworow")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Albumy");
                });

            modelBuilder.Entity("the_meme_generator.playlista", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("nazwa_playlisty")
                        .HasColumnType("TEXT");

                    b.Property<int?>("usersID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("utworID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("usersID");

                    b.HasIndex("utworID");

                    b.ToTable("Playlista");
                });

            modelBuilder.Entity("the_meme_generator.users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("haslo")
                        .HasColumnType("TEXT");

                    b.Property<string>("login")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("the_meme_generator.utwory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("albumyID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("czas_utworu")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("data_dodania")
                        .HasColumnType("TEXT");

                    b.Property<int>("lista_odtworzen")
                        .HasColumnType("INTEGER");

                    b.Property<string>("tytul")
                        .HasColumnType("TEXT");

                    b.Property<int?>("wykonawcyID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("albumyID");

                    b.HasIndex("wykonawcyID");

                    b.ToTable("Utwory");
                });

            modelBuilder.Entity("the_meme_generator.wykonawcy", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("rozpoczecie_kariery")
                        .HasColumnType("TEXT");

                    b.Property<int>("wydanych_albumow")
                        .HasColumnType("INTEGER");

                    b.Property<string>("wykonawca")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Wykonawcy");
                });

            modelBuilder.Entity("the_meme_generator.playlista", b =>
                {
                    b.HasOne("the_meme_generator.users", "users")
                        .WithMany("playlista")
                        .HasForeignKey("usersID");

                    b.HasOne("the_meme_generator.utwory", "utwor")
                        .WithMany()
                        .HasForeignKey("utworID");

                    b.Navigation("users");

                    b.Navigation("utwor");
                });

            modelBuilder.Entity("the_meme_generator.utwory", b =>
                {
                    b.HasOne("the_meme_generator.albumy", "albumy")
                        .WithMany("utwory")
                        .HasForeignKey("albumyID");

                    b.HasOne("the_meme_generator.wykonawcy", "wykonawcy")
                        .WithMany("utwory")
                        .HasForeignKey("wykonawcyID");

                    b.Navigation("albumy");

                    b.Navigation("wykonawcy");
                });

            modelBuilder.Entity("the_meme_generator.albumy", b =>
                {
                    b.Navigation("utwory");
                });

            modelBuilder.Entity("the_meme_generator.users", b =>
                {
                    b.Navigation("playlista");
                });

            modelBuilder.Entity("the_meme_generator.wykonawcy", b =>
                {
                    b.Navigation("utwory");
                });
#pragma warning restore 612, 618
        }
    }
}
